<template>
	<view>
		<view class="u-demo-block">
			<view>
				<swiper :indicator-dots="true" class="swiper">
					<swiper-item>
						<u-grid :border="true" @click="openPopup(popupData)">
							<u-grid-item v-for="(item, index) in swiperList" :index="index" :key="index">
								<u-icon :customStyle="{paddingTop:20+'rpx'}" :name="item" :size="30"></u-icon>
								<text class="grid-text" style="margin-top: 10px;">{{ '宫格' + (index + 1) }}</text>
							</u-grid-item>
							<u-grid-item>
								<u-icon :customStyle="{paddingTop:20+'rpx'}" name="plus-circle" :size="40"></u-icon>
								<text class="grid-text">添加</text>
							</u-grid-item>
						</u-grid>
					</swiper-item>
				</swiper>
			</view>
		</view>
		<u-toast ref="uToast" />
		<u-popup :safeAreaInsetBottom="true" :safeAreaInsetTop="true" :mode="popupData.mode" :show="show"
			:round="popupData.round" :overlay="popupData.overlay" :borderRadius="popupData.borderRadius"
			:closeable="popupData.closeable" :closeOnClickOverlay="popupData.closeOnClickOverlay" @close="close"
			@open="open">
			<view class="u-popup-slot" :style="{
					width: ['bottom', 'top'].includes(popupData.mode) ? '350px' : '350px',
					marginTop: ['left', 'right'].includes(popupData.mode) ? '500px' : '450px',
				}">
				<view class="u-demo-block__content">
					<!-- 注意，如果需要兼容微信小程序，最好通过setRules方法设置rules规则 -->
					<u--form labelPosition="left" :model="model1" ref="form">
						<u-form-item label="名称" prop="goodsInfo.goodsName" borderBottom ref="item1">
							<u--input v-model="model1.goodsInfo.goodsName" border="none" placeholder="输入商品名称">
							</u--input>
						</u-form-item>
						<u-form-item label="数量" prop="goodsInfo.goodsNum" borderBottom ref="item1">
							<u-cell :border="false">
								<u-number-box slot="right-icon" v-model="model1.goodsInfo.goodsNum" step="1" :min="1" @change="change">
								</u-number-box>
							</u-cell>
						</u-form-item>
						<u-form-item label="单价" prop="goodsInfo.goodsPrice" borderBottom ref="item1">
							<u--input v-model="model1.goodsInfo.goodsPrice" border="none">
							</u--input>
						</u-form-item>
						<u-form-item label="总价" borderBottom>
							{{ model1.goodsInfo.goodsPrice * model1.goodsInfo.goodsNum }}
						</u-form-item>
						<u-form-item label="购买渠道" prop="goodsInfo.goodsEqu" borderBottom labelWidth="80" ref="item1">
							<u-radio-group v-model="model1.goodsInfo.goodsEqu">
								<u-radio :customStyle="{marginRight: '16px'}" v-for="(item, index) in radiolist1"
									:key="index" :label="item.name" :name="item.name">
								</u-radio>
							</u-radio-group>
						</u-form-item>

						<u-form-item label="信息" prop="goodsInfo.remark" borderBottom ref="item1">
							<u--textarea placeholder="购买地址" v-model="model1.goodsInfo.remark" count></u--textarea>
						</u-form-item>
						<u-form-item label="到货时间" prop="goodsInfo.buyTime" labelWidth="80" borderBottom
							@click="showCalendar = true; hideKeyboard()">
							<u--input v-model="model1.goodsInfo.buyTime" disabled disabledColor="#ffffff" placeholder="请选择到货时间"
								border="none"></u--input>
							<u-icon slot="right" name="arrow-right"></u-icon>
						</u-form-item>

					</u--form>
					<u-button type="primary" text="提交" customStyle="margin-top: 50px" @click="submit">
					</u-button>
					<u-button type="error" text="删除" customStyle="margin-top: 10px" @click="reset"></u-button>
					
				</view>

			</view>
		</u-popup>
	</view>
</template>

<script>
	import { addGoods } from '@/src/api/goods.js';
	import { getGoodsList } from '@/src/api/goods.js';
	import { getGoodsInfo } from '@/src/api/goods.js';
	import { updateGoodsInfo } from '@/src/api/goods.js';
	import { deleteGoods } from '@/src/api/goods.js';
	
	export default {
		data() {
			return {
				swiperList: ['integral', 'kefu-ermai', 'coupon', 'gift', 'scan', 'pause-circle', 'wifi', 'email', 'list'],
				show: false,
				popupData: {
					overlay: true,
					mode: 'center',
					round: 10,
					closeable: true,
					closeOnClickOverlay: true
				},
				value1:0,
				fileList1: [],
				disabled1: false,
				tips: '',
				value: '',
				showCalendar: false,
				showBirthday: false,
				model1: {
					goodsInfo: {
						goodsName: '',
						goodsNum: 0,
						goodsPrice: 0.00,
						goodsPic: '',
						goodsEqu: '',
						remark: '',
						buyTime: '',
						status: ''
					}
				},
				showSex: false,
				birthday: Number(new Date()),
				rules: {
					'goodsInfo.goodsName': {
						type: 'string',
						min: 0,
						required: true,
						message: '不能为空',
						trigger: ['change']
					}
				},
				radiolist1: [
					{
						name: '淘宝',
						value: 1,
						disabled: false
					},
					{
						name: '拼多多',
						value: 2,
						disabled: false
					},
					{
						name: '线下',
						value: 3,
						disabled: false
					}
				]
			}
		},
		onReady() {
			// 如果需要兼容微信小程序，并且校验规则中含有方法等，只能通过setRules方法设置规则
			// this.$refs.form1.setRules(this.rules)
		},
		methods: {
			openPopup(popupData) {
				this.popupData = popupData
				uni.$u.sleep().then(() => {
					this.show = !this.show
				})
			},
			navigateBack() {
				uni.navigateBack()
			},
			open() {
				// console.log('open');
			},
			close() {
				this.show = false
				// console.log('close');
			},
			submit() {
				// 如果有错误，会在catch中返回报错信息数组，校验通过则在then中返回true
				this.$refs.form.validate().then(res => {
					var data = this.model1.goodsInfo;
					if(data.id === ""){
						addGoods(data).then(res=>{
							uni.$u.toast('添加成功');
							// this.getFriendsList(this.model1.goodsInfo.friendGroupId);
							this.close();
						}).catch(err => {
							uni.$u.toast('添加失败')
						});	
					}else{
						updateGoodsInfo(data).then(res=>{
							uni.$u.toast('修改成功');
							// this.getFriendsList(this.model1.goodsInfo.friendGroupId);
							this.close();
						}).catch(err => {
							uni.$u.toast('修改失败')
						});	
					}
					
				}).catch(errors => {
					uni.$u.toast('校验失败')
				})
			}
		},
		mounted() {
		}
	}
</script>

<style lang="scss">
	.swiper {
		height: 600px;
	}

	.u-popup-slot {
		width: 200px;
		height: 150px;
		@include flex;
		justify-content: center;
		align-items: center;
	}

	.grid-text {
		font-size: 15px;
		color: #909399;
		padding: 10rpx 0 50rpx 0rpx;
		/* #ifndef APP-PLUS */
		box-sizing: border-box;
		/* #endif */
	}

	.u-demo-block__content {
		margin-top: -450px;
	}
	
	
</style>
